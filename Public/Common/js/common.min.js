$(document).ready(function(){
	//Kindeditor编辑器
	var keditor = $('.keditor'), uploadJson = 'http://upload.qiniu.com/', filePostName = 'file';
    if(keditor.length > 0){
    	var editor, token1, token2;
    	//异步加载Kindeditor
    	$.ajax({url:'/Public/Kindeditor/kindeditor.min.js', dataType:'script', cache:true}).done(function(){
    		KindEditor.basePath = '/Public/Kindeditor/';
  			KindEditor.loadStyle('/Public/Kindeditor/themes/default/default.css');
  			KindEditor.loadScript('/Public/Kindeditor/lang/zh_CN.js');
  			//文本框编辑器
  			$.ajax({url: '/Home/Upload/getToken?type=3', async: false, success: function(data){
  				token1 = data.token1;
  				token2 = data.token2;

  				editor = KindEditor.create('.keditor', {
  					uploadJson : uploadJson, filePostName : filePostName, extraFileUploadParams : {token : token2}, token : token1, resizeType : 1, width : 455, height : 160,
  					items : ['fontname', 'fontsize', 'forecolor', 'hilitecolor', '|', 'bold', 'italic', 'underline', 'strikethrough', '|', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', '|', 'insertorderedlist', 'insertunorderedlist', 'image', '|', 'fullscreen'],
  					afterCreate: function(){this.sync();},
  					afterBlur: function(){this.sync();}
  				});
  			}});
		 });
    }

    //表单页操作 data-callback设置回调函数
    if($("#myform").length > 0){
    	$.ajax({url:'/Public/Common/js/jquery.validate.min.js', dataType:'script', cache:true}).done(function(){
    		var form = $("#myform");
    		form.validate({
    			highlight:function(element) { $(element).closest('.required').addClass('red_error'); },
    			unhighlight:function(element) { $(element).closest('.required').removeClass('red_error'); },
    			errorPlacement:function(error, element) { error.appendTo(element.parent()); },
    			submitHandler:function(){
    				waiting();
					$.post(form.attr('action'), form.serialize(), function(data){
						complete(); showInfo(data.info);
						setTimeout(function(){
							if(data.status == 1){
								var fun = form.data('callback'), url = data.url;
								if(fun != undefined){
									eval(fun+"("+JSON.stringify(data)+")");
								}else if(url != undefined){
									location.href = url;
								}else{
									form[0].reset();
									$('.keditor').length > 0 &&  KindEditor.instances[0].html("");
									$('.uploadify-div').length > 0 && $('.uploadify-div').remove();
								}
							}
						}, 1600);
					});
	    		}
	    	});
    	});
    }
    
    //Uploadify文件上传  data-name表单名称  data-type上传类型 data-multi是否多图上传 data-callback回调函数
    if($('.upload').length > 0){
    	$.ajax({url:'/Public/Common/js/jquery.uploadify.min.js', dataType:'script', cache:true}).done(function(){
        	$.ajax({url: '/Home/Upload/getToken?type=2', async: false, success: function(token){
        		$('.upload').each(function(){
        			var obj = $(this), buttonText = obj.html(), id = obj.attr('id'), name = obj.data('name'), name = name == undefined ? 'pic' : name, type = obj.data('type'), fun = obj.data('callback'),
        			fileTypeExts = type == 'file' ? '*.zip;*.rar;*.mp3;*.doc;*.xsl;*.docx;*.xslx' : '*.jpg;*.jpeg;*.png;*.gif', multi = obj.data('multi') == true ? true : false;
        			$('#'+id).uploadify({
        				'uploader' : uploadJson, 'swf':'/Public/Common/css/uploadify.swf', 'fileObjName':filePostName, 'buttonText':buttonText, 'fileSizeLimit':'2MB',
        				'queueSizeLimit':10, 'removeTimeout':1, 'multi':multi, 'fileTypeExts':fileTypeExts, 'formData':{'token':token},
        				'onUploadSuccess' : function(file, data, response){
        					if (fun != undefined) {
        						eval(fun+"('"+data+"')");
        					}else{
        						data = $.parseJSON(data);
        						var div = $('#'+id).parent().find('.uploadify-div'), html = '<li>';
        						html += type == 'file' ? "<a href='"+data.url+"'>"+file.name.substr(0, file.name.lastIndexOf('.'))+"</a>" : "<img src='"+data.url+"' />";
        						html += "<input type='hidden' name='"+name+"' value='"+data.url+"' /></li>";
        						multi && div.append(html) || div.html(html);
        					}
        				}
        			});
        		});
    		}});
    	});
    }
    
    //百度地图
    if($("#map").length > 0){
  		var mapx = $('#mapx').val(), mapy = $('#mapy').val();
  		var map = new BMap.Map('map');
  		var point = new BMap.Point(mapx, mapy);
  		map.centerAndZoom(point, 16);
  		map.addControl(new BMap.NavigationControl());
  		map.enableScrollWheelZoom();
  		
  		var marker = new BMap.Marker(point);
  		map.addOverlay(marker);
  		marker.enableDragging();
  		marker.addEventListener("dragend", function(){setInfo(marker)});
  		marker.addEventListener("click", function(){setInfo(marker)});

  		map.addEventListener("click", function(e){
  			marker.setPosition(e.point);
  			setInfo(marker);
  		});
  		//百度地图设置位置
      function setInfo(marker){
      	var p = marker.getPosition();
      	$('#mapx').val(p.lng);
      	$('#mapy').val(p.lat);
      	var myGeo = new BMap.Geocoder();
      	myGeo.getLocation(p, function(result) {
      		if (result) {
      			$('#address').val(result.address);
      		}
      	});
      }
    }

    //快捷状态设置
    if($('.setStatus').length > 0){
    	$('.setStatus').click(function(){
    		var obj = $(this), url = obj.data('url'), status = obj.data('status'), html; waiting();
    		$.get(url, {status : status}, function(data){
    			complete(); showInfo(data.info);
    			if(data.status == 1){
    				obj.data('status', status == 1 ? 0 : 1);
					if(obj.html() == '正常' || obj.html() == '删除'){
						html = obj.html() == '正常' ? '删除' : '正常';
					}else{
						html = obj.html() == '禁用' ? '启用' : '禁用';
					}
    				if(status == 1){
    					obj.removeClass('btn-primary').addClass('btn-default').html(html);
    				}else{
    					obj.removeClass('btn-default').addClass('btn-primary').html(html);
    				}
    			}
    		});
    	});
    }
    //快捷修改排序
    if($('.setSort').length > 0){
    	$('.setSort').blur(function(){
    		var obj = $(this), sort = obj.val();
	    	if(!/^\d+$/.test(sort)){
	    		showInfo('只能输入整数哦');
	    	}else{
	    		waiting();
	    		$.get(obj.data('url'), {sort: sort}, function(data){
	    			complete(); showInfo(data.info);
	    		});
	    	}
	    });
    }
    //删除记录
    if($('.delBtn').length > 0){
    	$('.delBtn').click(function(){
    		var obj = $(this);
    		if(confirm("确定要删除吗？")){
    			waiting();
    			$.get(obj.data('url'), function(data){
    				complete(); showInfo(data.info);
    				data.status == 1 && obj.parents('tr').remove();
    			});
    		}
    	});
    }
    //关闭消息框
    $('body').on('click', '.prompt .close', function(){
    	$(this).parent().remove();
    });	
});

//消息提示框
function showInfo(info){
	var tmp = (Math.random() * 1000).toFixed(0);
	var html= '<div class="promp_text hide_' + tmp + '">' + info + '<div class="icon-remove close"></div></div>';
	if($('.prompt').length == 0){
		html = '<div class="prompt">' + html + '</div>';
		$("body").prepend(html);
	}else{
		$(".prompt").prepend(html);
	}
	$(".promp_text").animate({opacity: "1"}, 600);
	setTimeout('$(".hide_' + tmp + '").animate({opacity:"0"}, 1000,function(){$(".hide_' + tmp + '").remove();});', 1600);
}
//等待效果
function waiting(){
  $('body').append('<div class="load_effect"></div>');
}
//移除等待效果
function complete(){
  $('.load_effect').remove();
}